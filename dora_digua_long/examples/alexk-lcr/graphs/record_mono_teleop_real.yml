nodes:
  - id: lcr-leader
    build: pip install ../../../node-hub/dynamixel-client
    path: dynamixel-client
    inputs:
      pull_position:
        source: lerobot-dashboard/tick
        queue_size: 1
      write_goal_position: lcr-to-lcr/leader_goal
      end: lerobot-dashboard/end
    outputs:
      - position
    env:
      PORT: /dev/tty.usbmodem575E0030111
      CONFIG: ../configs/leader.left.json

  - id: lcr-to-lcr
    build: pip install git+https://github.com/Hennzau/pwm-position-control
    path: ../nodes/interpolate_lcr_to_lcr.py
    inputs:
      leader_position:
        source: lcr-leader/position
        queue_size: 1
      follower_position:
        source: lcr-follower/position
        queue_size: 1
    outputs:
      - follower_goal
      - leader_goal
    env:
      LEADER_CONTROL: ../configs/leader.left.json
      FOLLOWER_CONTROL: ../configs/follower.left.json

  - id: lcr-to-record
    build: pip install git+https://github.com/Hennzau/pwm-position-control
    path: ../nodes/interpolate_lcr_to_record.py
    inputs:
      leader_position:
        source: lcr-leader/position
        queue_size: 1
      follower_position:
        source: lcr-follower/position
        queue_size: 1
    outputs:
      - logical_goal
      - logical_position
    env:
      LEADER_CONTROL: ../configs/leader.left.json
      FOLLOWER_CONTROL: ../configs/follower.left.json

  - id: lcr-follower
    build: pip install ../../../node-hub/dynamixel-client
    path: dynamixel-client
    inputs:
      pull_position:
        source: lerobot-dashboard/tick
        queue_size: 1
      write_goal_position:
        source: lcr-to-lcr/follower_goal
        queue_size: 1
      end: lerobot-dashboard/end
    outputs:
      - position
    env:
      PORT: /dev/tty.usbmodem575E0031141
      CONFIG: ../configs/follower.left.json

  - id: opencv-video-capture
    build: pip install ../../../node-hub/opencv-video-capture
    path: opencv-video-capture
    inputs:
      tick:
        source: lerobot-dashboard/tick
        queue_size: 1
    outputs:
      - image
    env:
      PATH: 1
      IMAGE_WIDTH: 860
      IMAGE_HEIGHT: 540

  - id: video-encoder
    build: pip install ../../../node-hub/video-encoder
    path: video-encoder
    inputs:
      image: opencv-video-capture/image
      episode_index: lerobot-dashboard/episode
    outputs:
      - image
    env:
      VIDEO_NAME: cam_up
      FPS: 30

  - id: lerobot-dashboard
    build: pip install ../../../node-hub/lerobot-dashboard
    path: lerobot-dashboard
    inputs:
      tick:
        source: dora/timer/millis/16
        queue_size: 1
      image_left: opencv-video-capture/image
    outputs:
      - tick
      - episode
      - failed
      - end
    env:
      WINDOW_WIDTH: 1720
      WINDOW_HEIGHT: 540

  - id: dora-record
    build: cargo install dora-record
    path: dora-record
    inputs:
      action: lcr-to-record/logical_goal
      observation.state: lcr-to-record/logical_position
      episode_index: lerobot-dashboard/episode
      failed_episode_index: lerobot-dashboard/failed
      observation.images.cam_up: video-encoder/image